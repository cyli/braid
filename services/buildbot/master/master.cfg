#! /usr/bin/python

# This configuration file is described in $BUILDBOT/docs/config.xhtml

# This is used to run the Twisted Buildbot at
# <http://buildbot.twistedmatrix.com/>. Passwords and other secret
# information are loaded from a neighboring file called 'private.py'.

# Enable TCP keepalives.  The build master is terrible at noticing
# disconnected slaves.  Also it's terrible at letting me enable tcp
# keepalives.
from twisted.spread.pb import PBServerFactory
_parent = PBServerFactory.protocol
class KeepaliveBroker(_parent):
    def makeConnection(self, transport):
        transport.setTcpKeepAlive(True)
        return _parent.makeConnection(self, transport)
PBServerFactory.protocol = KeepaliveBroker

# We now return to your regularly scheduled program.
from os.path import expanduser, dirname
import sys
sys.path.insert(0, expanduser('~/private'))
sys.path.insert(0, dirname(__file__))
del expanduser, dirname, sys

from buildbot.changes import filter
from buildbot.schedulers.timed import Nightly
from buildbot.schedulers import forcesched
from buildbot.status import words, client, mail
from buildbot.status.web.auth import BasicAuth
from buildbot.status.web.authz import Authz
from buildbot.locks import SlaveLock
from buildbot.buildslave import BuildSlave

import private # holds passwords
reload(private) # make it possible to change the contents without a restart

from twisted_factories import (
    TwistedDocumentationBuildFactory,
    TwistedVirtualenvReactorsBuildFactory,
    TwistedJythonReactorsBuildFactory,
    TwistedBdistFactory,
    TwistedCoveragePyFactory,
    TwistedCheckerBuildFactory,
    PyFlakesBuildFactory,
    TopfileCheckerFactory,
    TwistedBenchmarksFactory,
    CheckManifestBuildFactory,
    TwistedToxBuildFactory,
    TwistedToxCoverageBuildFactory,
    Win32RemovePYCs,
    BASE_DEPENDENCIES, CEXT_DEPENDENCIES,
    EXTRA_DEPENDENCIES, WINDOWS_DEPENDENCIES,
)

from txbuildbot.git import MergeForward, TwistedGit
from txbuildbot.web import TwistedWebStatus
from txbuildbot.scheduler import TwistedScheduler

BuildmasterConfig = c = {}

# Maximum number of builds to execute on a slave at a time.  Slaves
# not listed here have no limit.
slave_max_builds = {
    'bot-glyph-6': 1,
    'tavendo-freebsd-10.1-amd64': 1,
}

fedora22_slaves = ['fedora-fedora22-%d' % (i,) for i in range(1,3)]
fedora23_slaves = ['fedora-fedora23-%d' % (i,) for i in range(1,3)]
rhel7_slaves = ['fedora-rhel7-%d' % (i,) for i in range(1,3)]

debian8_slaves = ['rax-debian8-%d' % (i,) for i in range(1,3)]
ubuntu12_04_slaves = ['rax-ubuntu1204-%d' % (i,) for i in range(1,3)]
ubuntu16_04_slaves = ['rax-ubuntu1604-%d' % (i,) for i in range(1,4)]


# These builders run some heavy builders (pypy, jython) so only run one at a
# time.
for slave in (ubuntu16_04_slaves + debian8_slaves):
    slave_max_builds[slave] = 1


c['slaves'] = []
alwaysNotify = ['tom.prince@ualberta.net']
for bot in private.bot_info.keys():
    password, notifyOnMissing = private.bot_info[bot]
    if alwaysNotify not in notifyOnMissing:
        notifyOnMissing.extend(alwaysNotify)
    c['slaves'].append(BuildSlave(
            bot, password, slave_max_builds.get(bot, None),
            notifyOnMissing, 2400))

c['change_source'] = []

## configure the builders

gitURL = "https://github.com/twisted/twisted.git"

git_update = [
    TwistedGit(repourl=gitURL, branch="trunk", mode='full', method='fresh'),
    MergeForward(repourl=gitURL)
]

builders = []

oneCPULock = SlaveLock('cpu-1', maxCount=1)
twoCPULock = SlaveLock('cpu-2', maxCount=2)

builders.append({
    'slavenames': ubuntu16_04_slaves,
    'name': 'documentation',
    'builddir': 'documentation',
    'factory': TwistedDocumentationBuildFactory(git_update),
    'category': 'supported'})

#
# Code quality (twistedchecker, pyflakes)
#
builders.append({
    'slavenames': ubuntu16_04_slaves,
    'name': 'twistedchecker',
    'builddir': 'twistedchecker',
    'factory': TwistedCheckerBuildFactory(git_update),
    'category': 'supported'})

builders.append({
    'slavenames': ubuntu16_04_slaves,
    'name': 'pyflakes',
    'builddir': 'pyflakes',
    'factory': PyFlakesBuildFactory(git_update),
    'category': 'supported'})


#
# check-manifest
#
builders.append({
    'slavenames': ubuntu16_04_slaves,
    'name': 'check-manifest',
    'builddir': 'check-manifest',
    'factory': CheckManifestBuildFactory(git_update),
    'category': 'supported'})


#
# Topfile checker
#
builders.append({
    'slavenames': ubuntu16_04_slaves,
    'name': 'topfile',
    'builddir': 'topfile',
    'factory': TopfileCheckerFactory(git_update),
    'category': 'unsupported'})


#
# Debian 8
#
builders.append({
    'slavenames': debian8_slaves,
    'name': 'debian8-py2.7',
    'builddir': 'debian8-py2.7',
    'factory': TwistedToxBuildFactory(
        git_update, toxEnv="py27-tests",
        reactors=["select", "poll", "epoll"]),
    'category': 'supported'})


#
# Windows 7
#
builders.append({
    'name': 'windows7-64-py2.7',
    'builddir': 'windows7-64-py2.7-select',
    'slavenames': ['bot-glyph-6'],
    'factory': TwistedVirtualenvReactorsBuildFactory(
        git_update, RemovePYCs=Win32RemovePYCs,
        dependencies=(BASE_DEPENDENCIES + CEXT_DEPENDENCIES +
                      EXTRA_DEPENDENCIES + WINDOWS_DEPENDENCIES),
        python="C:\\Python27\\python.exe",
        reactors=["select", "iocp"], platform="windows",
        uncleanWarnings=True),
    'category': 'supported'})


builders.append({
    'name': 'windows7-64-py2.7-coverage',
    'builddir': 'windows7-64-py2.7-coverage',
    'slavenames': ['bot-glyph-6'],
    'factory': TwistedCoveragePyFactory(
        source=git_update, RemovePYCs=Win32RemovePYCs,
        dependencies=(BASE_DEPENDENCIES + CEXT_DEPENDENCIES +
                      EXTRA_DEPENDENCIES + WINDOWS_DEPENDENCIES),
        python="C:\\Python27\\python.exe", platform="windows",
        buildID="windows64py27", uncleanWarnings=True),
    'category': 'supported'})

builders.append({
    'name': 'windows7-64-py2.7-coverage-test',
    'builddir': 'windows7-64-py2.7-coverage-test',
    'slavenames': ['bot-glyph-6'],
    'factory': TwistedToxCoverageBuildFactory(
        git_update, toxEnv="py27-coverage-windows",
        buildID="windows64py27", platform="windows",
    ),
    'category': 'unsupported'})


builders.append({
    'name': "windows7-64-py2.7-msi",
    'builddir': "windows7-64-py2.7-msi",
    'slavenames': ['bot-glyph-6'],
    'factory': TwistedBdistFactory(
        git_update,
        uncleanWarnings=True,
        arch="win-amd64",
        pyVersion="2.7"),
    'category': 'supported'})


builders.append({
    'name': 'windows7-64-py3.4',
    'builddir': 'windows7-64-py3.4-select',
    'slavenames': ['bot-glyph-6'],
    'factory': TwistedVirtualenvReactorsBuildFactory(
        git_update, RemovePYCs=Win32RemovePYCs,
        python="C:\\Python34\\python.exe",
        reactors=["select"], uncleanWarnings=True,
        virtualenv_module='venv', platform="windows",
        trial="./admin/run-python3-tests", tests='',
        dependencies=BASE_DEPENDENCIES + WINDOWS_DEPENDENCIES),
    'category': 'unsupported'})


builders.append({
    'name': 'windows7-64-py3.5',
    'builddir': 'windows7-64-py3.5-select',
    'slavenames': ['bot-glyph-6'],
    'factory': TwistedVirtualenvReactorsBuildFactory(
        git_update, RemovePYCs=Win32RemovePYCs,
        python="C:\\Python35\\python.exe",
        reactors=["select"], uncleanWarnings=True,
        virtualenv_module='venv', platform="windows",
        trial="./admin/run-python3-tests", tests='',
        dependencies=BASE_DEPENDENCIES + WINDOWS_DEPENDENCIES),
    'category': 'unsupported'})


#
# Ubuntu 12.04
#
builders.append({
    'name': "ubuntu12.04-py2.7",
    'builddir': "ubuntu12.04-py2.7",
    'slavenames': ubuntu12_04_slaves,
    'factory': TwistedToxBuildFactory(
        git_update, toxEnv="py27-tests-posix",
        allowSystemPackages=True,
        reactors=["select", "poll", "epoll", "glib2"],
    ),
    'category': "supported",
})

builders.append({
    'name': "ubuntu12.04-py2.7-coverage",
    'builddir': "ubuntu12.04-py2.7-coverage",
    'slavenames': ubuntu12_04_slaves,
    'factory': TwistedToxCoverageBuildFactory(
        git_update, toxEnv="py27-coverage-posix",
        buildID="ubuntu1204py27",
        allowSystemPackages=True,
    ),
    'category': "supported",
})


#
# Ubuntu 14.04
#
builders.append({
    'name': 'ubuntu14.04-py2.7',
    'slavenames': ['bot-glyph-1'],
    'builddir': 'ubuntu64-py2.6-poll',
    'factory': TwistedToxBuildFactory(
        git_update, toxEnv="py27-tests-posix",
        reactors=["select", "poll", "epoll"]),
    'category': 'supported'})


#
# Ubuntu 16.04
#
builders.append({
    'name': 'ubuntu16.04-py2.7',
    'builddir': 'ubuntu16.04-py2.7',
    'slavenames': ubuntu16_04_slaves,
    'factory': TwistedToxBuildFactory(
        git_update, toxEnv="py27-tests-posix",
        reactors=["select", "poll", "epoll"]),
    'category': 'supported'})

# No OPTIONAL modules
builders.append({
    'name': 'ubuntu16.04-py2.7-nomodules',
    'builddir': 'ubuntu16.04-py2.7-nomodules',
    'slavenames': ubuntu16_04_slaves,
    'factory': TwistedToxBuildFactory(
        git_update, toxEnv="py27-nomodules",
        reactors=["select", "poll", "epoll"]),
    'category': 'supported'})

builders.append({
    'name': 'ubuntu16.04-py2.7-nomodules-coverage',
    'builddir': 'ubuntu16.04-py2.7-nomodules-coverage',
    'slavenames': ubuntu16_04_slaves,
    'factory': TwistedCoveragePyFactory(
        source=git_update, python="python",
        dependencies=["zope.interface", "constantly"],
        buildID='ubuntu16.04py2.7-nomodules'),
    'category': 'supported'})

builders.append({
    'name': 'ubuntu16.04-py2.7-coverage',
    'builddir': 'ubuntu16.04-py2.7-coverage',
    'slavenames': ubuntu16_04_slaves,
    'factory': TwistedToxCoverageBuildFactory(
        git_update, toxEnv="py27-coverage-posix",
        buildID='ubuntu16.04py2.7'
    ),
    'category': 'supported'})

builders.append({
    'name': 'ubuntu16.04-py3.5',
    'builddir': 'ubuntu1604-python-3.5',
    'slavenames': ubuntu16_04_slaves,
    'factory': TwistedToxBuildFactory(
        git_update, toxEnv="py35-tests-posix",
        reactors=["select", "poll", "epoll"]),
    'category': 'supported'})

builders.append({
    'name': 'ubuntu16.04-py3.5-coverage',
    'builddir': 'ubuntu1604-py3.5-coverage',
    'slavenames': ubuntu16_04_slaves,
    'factory': TwistedToxCoverageBuildFactory(
        git_update, toxEnv="py35-coverage-posix",
        buildID="ubuntu1604py3.5"),
    'category': 'supported'})

builders.append({
    'name': 'ubuntu16.04-pypy5',
    'builddir': 'ubuntu16.04-pypy5',
    'slavenames': ubuntu16_04_slaves,
    'factory': TwistedToxBuildFactory(
        git_update, toxEnv="pypy-tests-posix",
        reactors=["select", "poll", "epoll"]),
    'category': 'unsupported'})

#
# Benchmarks
#
builders.append({
    'name': 'ubuntu16.04-py2.7-benchmark',
    'builddir': 'ubuntu16.04-py2.7-benchmark',
    'slavenames': ['rax-ubuntu1604-2'],
    'locks': [twoCPULock.access('counting')],
    'factory': TwistedBenchmarksFactory(python='python',
                                        source=git_update),
    'category': 'benchmark'})

builders.append({
    'name': 'ubuntu16.04-pypy5-benchmark',
    'builddir': 'ubuntu16.04-pypy5-benchmark',
    'slavenames': ['rax-ubuntu1604-2'],
    'locks': [twoCPULock.access('counting')],
    'factory': TwistedBenchmarksFactory(python="pypy",
                                        source=git_update),
        'category': 'benchmark'})

builders.append({
    'name': 'ubuntu16.04-py3.5-benchmark',
    'builddir': 'ubuntu16.04-py3.5-benchmark',
    'slavenames': ['rax-ubuntu1604-2'],
    'locks': [twoCPULock.access('counting')],
    'factory': TwistedBenchmarksFactory(python="python3.5",
                                        source=git_update),
    'category': 'benchmark'})


#
# Fedora 22
#
builders.append({
    'name': 'fedora22-py2.7',
    'builddir': 'fedora22-py2.7',
    'slavenames': fedora22_slaves,
    'factory': TwistedToxBuildFactory(
        git_update, toxEnv="py27-tests-posix",
        reactors=["select", "poll", "epoll"]),
    'category': 'supported'})

builders.append({
    'name': 'fedora22-py2.7-coverage',
    'builddir': 'fedora22-py2.7-coverage',
    'slavenames': fedora22_slaves,
    'factory': TwistedToxCoverageBuildFactory(
        git_update, toxEnv="py27-coverage-posix",
        buildID='fedora22py2.7'),
    'category': 'supported'})

builders.append({
    'name': 'fedora22-py3.4',
    'builddir': 'fedora22-python-3.4',
    'slavenames': fedora22_slaves,
    'factory': TwistedToxBuildFactory(
        git_update, toxEnv="py34-tests-posix",
        reactors=["select", "poll", "epoll"]),
    'category': 'supported'})

builders.append({
    'name': 'fedora22-py3.4-coverage',
    'builddir': 'fedora22-py3.4-coverage',
    'slavenames': fedora22_slaves,
    'factory': TwistedToxCoverageBuildFactory(
        git_update, toxEnv="py34-coverage-posix",
        buildID="fedora22py3.4"),
    'category': 'supported'})


#
# Fedora 23
#
builders.append({
    'name': 'fedora23-py2.7',
    'builddir': 'fedora23-py2.7',
    'slavenames': fedora23_slaves,
    'factory': TwistedToxBuildFactory(
        git_update, toxEnv="py27-tests-posix",
        reactors=["select", "poll", "epoll"]),
    'category': 'supported'})

builders.append({
    'name': 'fedora23-py2.7-coverage',
    'builddir': 'fedora23-py2.7-coverage',
    'slavenames': fedora23_slaves,
    'factory': TwistedToxCoverageBuildFactory(
        git_update, toxEnv="py27-coverage-posix",
        buildID='fedora23py2.7'),
    'category': 'supported'})

builders.append({
    'name': 'fedora23-py3.4',
    'builddir': 'fedora23-python-3.4',
    'slavenames': fedora23_slaves,
    'factory': TwistedToxBuildFactory(
        git_update, toxEnv="py34-tests-posix",
        reactors=["select", "poll", "epoll"]),
    'category': 'supported'})

builders.append({
    'name': 'fedora23-py3.4-coverage',
    'builddir': 'fedora23-py3.4-coverage',
    'slavenames': fedora23_slaves,
    'factory': TwistedToxCoverageBuildFactory(
        git_update, toxEnv="py34-coverage-posix",
        buildID="fedora23py3.4"),
    'category': 'supported'})


#
# RHEL 7
#
builders.append({
    'name': 'rhel7-py2.7',
    'builddir': 'rhel7-py2.7',
    'slavenames': rhel7_slaves,
    'factory': TwistedToxBuildFactory(
        git_update, toxEnv="py27-tests-posix",
        reactors=["select", "poll", "epoll"]),
    'category': 'supported'})

builders.append({
    'name': 'rhel7-py2.7-coverage',
    'builddir': 'rhel7-py2.7-coverage',
    'slavenames': rhel7_slaves,
    'factory': TwistedToxCoverageBuildFactory(
        git_update, toxEnv="py27-coverage-posix",
        buildID='rhel7py2.7'),
    'category': 'supported'})


#
# OS X 10.10
#
builders.append({
    'slavenames': ['egh-osx-1'],
    'locks': [twoCPULock.access('counting')],
    'name': 'osx10.10-py2.7',
    'builddir': 'osx10.10-py2.7',
    'factory': TwistedToxBuildFactory(
        git_update, toxEnv="py27-tests-posix",
        reactors=["select"]),
    'category': 'supported'})


builders.append({
    'slavenames': ['egh-osx-1'],
    'locks': [twoCPULock.access('counting')],
    'name': 'osx10.10-py2.7-coverage',
    'builddir': 'osx10.10-py2.7-coverage',
    'factory': TwistedToxCoverageBuildFactory(
        git_update, toxEnv="py27-coverage-posix",
        buildID='osx1010py2.7'),
    'category': 'unsupported'})


builders.append({
    'slavenames': ['egh-osx-1'],
    'locks': [twoCPULock.access('counting')],
    'name': 'osx10.10-py2.7-cf',
    'builddir': 'osx10.10-py2.7-cf',
    'factory': TwistedToxBuildFactory(
        git_update, toxEnv="py27-tests-posix",
        allowSystemPackages=True,
        reactors=["cf"]),
    'category': 'unsupported'})


builders.append({
    'slavenames': ['egh-osx-1'],
    'locks': [twoCPULock.access('counting')],
    'name': 'osx10.10-py2.7-kqueue',
    'builddir': 'osx10.10-py2.7-kqueue',
    'factory': TwistedToxBuildFactory(
        git_update, toxEnv="py27-tests-posix",
        reactors=["kqueue"]),
    'category': 'unsupported'})


#
# FreeBSD 10.1
#
builders.append({
    'name': 'freebsd10.1-py2.7',
    'builddir': 'freebsd10.1-python-2.7',
    'slavenames': ['tavendo-freebsd-10.1-amd64'],
    'factory': TwistedToxBuildFactory(
        git_update, toxEnv="py27-tests",
        reactors=["select", "poll", "kqueue"]),
    'category': 'unsupported'})


builders.append({
    'name': 'freebsd10.1-py2.7-coverage',
    'builddir': 'freebsd10.1-py2.7-coverage',
    'slavenames': ['tavendo-freebsd-10.1-amd64'],
    'factory': TwistedToxCoverageBuildFactory(
        git_update, toxEnv="py27-coverage",
        buildID='freebsd101py2.7'),
    'category': 'unsupported'})


builders.append({
    'slavenames': ['tavendo-freebsd-10.1-amd64'],
    'name': 'freebsd10.1-py3.4',
    'builddir': 'freebsd10.1-python-3.4',
    'factory': TwistedToxBuildFactory(
        git_update, toxEnv="py34-tests",
        reactors=["select", "poll", "kqueue"]),
    'category': 'unsupported'})


builders.append({
    'slavenames': ['tavendo-freebsd-10.1-amd64'],
    'name': 'freebsd10.1-py3.4-coverage',
    'builddir': 'freebsd10.1-python-3.4-coverage',
    'factory': TwistedToxCoverageBuildFactory(
        git_update, toxEnv="py34-coverage",
        buildID="freebsd101py3.4"),
    'category': 'unsupported'})


if 'vagrant-testing' in private.bot_info.keys():
    # When we are running in testing mode, add the testing
    # slave to all builders.
    for builder in builders:
        builder['slavenames'] = builder['slavenames'] + ['vagrant-testing']

c['builders'] = builders


# Now set up the schedulers. We do this after setting up c['builders']
# so we can auto-generate the correct configuration from the builder
# definitions.
c['schedulers'] = [
    TwistedScheduler(
        name="all",
        change_filter=filter.ChangeFilter(branch='trunk'),
        builderNames=[b['name'] for b in builders if b['category'] in ('supported', 'unsupported')],
        treeStableTimer=None),
    Nightly(
        name="Benchmarks",
        builderNames=[
            b['name'] for b in builders if b['category'] == 'benchmark'],
        hour=6, minute=3, branch=None, onlyIfChanged=True),
    ]

c['schedulers'].extend([
    forcesched.ForceScheduler(
        name='force-supported',
        repository=forcesched.FixedParameter(name='repository', default=''),
        branch=forcesched.StringParameter(name='branch', default=''),
        project=forcesched.FixedParameter(name="project", default=""),
	properties=[forcesched.StringParameter(name='test-case-name', label="test case", default='twisted')],
        builderNames=[ b['name'] for b in builders if b['category'] == 'supported' ]),
    forcesched.ForceScheduler(
        name='force-unsupported',
        repository=forcesched.FixedParameter(name='repository', default=''),
        branch=forcesched.StringParameter(name='branch', default=''),
        project=forcesched.FixedParameter(name="project", default=""),
        properties=[forcesched.StringParameter(name='test-case-name', label="test case", default='twisted')],
        builderNames=[ b['name'] for b in builders if b['category'] == 'unsupported' ]),
    forcesched.ForceScheduler(
        name='force-benchmark',
        repository=forcesched.FixedParameter(name='repository', default=''),
        branch=forcesched.StringParameter(name='branch', default=''),
        project=forcesched.FixedParameter(name="project", default=""),
        properties=[forcesched.StringParameter(name='test-case-name', label="test case", default='twisted')],
        builderNames=[ b['name'] for b in builders if b['category'] == 'benchmark' ]),
])

# configure other status things

c['slavePortnum'] = 9987
c['status'] = []

if hasattr(private, "irc_password"):
    c['status'].append(words.IRC(host="irc.freenode.net",
                                 nick='buildbot',
                                 password=private.irc_password,
                                 channels=["twisted-dev"]))


from twisted.python.util import sibpath
import jinja2
users = [ ('twisted', 'matrix') ]
authz = Authz(
    auth=BasicAuth(users),
    default_action='auth',
    gracefulShutdown=False,
    cleanShutdown=False,
    showUsersPage=False,
    )
status = TwistedWebStatus(
    authz=authz,
    public_html=sibpath(__file__, 'public_html'),
    change_hook_dialects={'github': {}},
    jinja_loaders=[jinja2.FileSystemLoader(sibpath(__file__, 'templates'))],
    **private.webOptions)
c['status'].append(status)
del status

c['debugPassword'] = private.debugPassword
#c['interlocks'] = [("do-deb", ["full-2.2"], ["debuild"])]

c['status'].append(client.PBListener(9936))
m = mail.MailNotifier(fromaddr="buildbot@twistedmatrix.com",
                      builders=["quick", "debian-py2.3-select"],
                      sendToInterestedUsers=True,
                      extraRecipients=["warner@lothar.com"],
                      mode="problem",
                     )
c['status'].append(m)


c['projectName'] = "Twisted"
c['projectURL'] = "http://twistedmatrix.com/"
c['buildbotURL'] = "http://buildbot.twistedmatrix.com/"

c['buildCacheSize'] = 500
c['mergeRequests'] = lambda builder, req1, req2: False

# vim: filetype=python sw=4 expandtab

# Cleanup old builds.
c['buildHorizon'] = 1000
